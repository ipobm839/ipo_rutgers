{"ast":null,"code":"var _jsxFileName = \"/Users/brittanymorris/Desktop/ipo_rutgers/src/components/Drawer.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport FocusTrap from \"focus-trap-react\";\nimport cn from \"classnames\";\nimport useMountTransition from \"./useMountTransition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createPortalRoot() {\n  const drawerRoot = document.createElement(\"div\");\n  drawerRoot.setAttribute(\"id\", \"drawer-root\");\n  return drawerRoot;\n}\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-a-drawer-component-with-react-portals\n */\n\n\nconst Drawer = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    children,\n    className,\n    onClose,\n    position = \"left\",\n    removeWhenClosed = true\n  } = _ref;\n  const bodyRef = useRef(document.querySelector(\"body\"));\n  const portalRootRef = useRef(document.getElementById(\"drawer-root\") || createPortalRoot());\n  const isTransitioning = useMountTransition(isOpen, 300); // Append portal root on mount\n\n  useEffect(() => {\n    bodyRef.current.appendChild(portalRootRef.current);\n    const portal = portalRootRef.current;\n    const bodyEl = bodyRef.current;\n    return () => {\n      // Clean up the portal when drawer component unmounts\n      portal.remove(); // Ensure scroll overflow is removed\n\n      bodyEl.style.overflow = \"\";\n    };\n  }, []); // Prevent page scrolling when the drawer is open\n\n  useEffect(() => {\n    const updatePageScroll = () => {\n      if (isOpen) {\n        bodyRef.current.style.overflow = \"hidden\";\n      } else {\n        bodyRef.current.style.overflow = \"\";\n      }\n    };\n\n    updatePageScroll();\n  }, [isOpen]); // Allow Escape key to dismiss the drawer\n\n  useEffect(() => {\n    const onKeyPress = e => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener(\"keyup\", onKeyPress);\n    }\n\n    return () => {\n      window.removeEventListener(\"keyup\", onKeyPress);\n    };\n  }, [isOpen, onClose]);\n\n  if (!isTransitioning && removeWhenClosed && !isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(FocusTrap, {\n    active: isOpen,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"aria-hidden\": isOpen ? \"false\" : \"true\",\n      className: cn(\"drawer-container\", {\n        open: isOpen,\n        in: isTransitioning,\n        className\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"drawer\", position),\n        role: \"dialog\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backdrop\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this), portalRootRef.current);\n};\n\n_s(Drawer, \"eMjEUr3F+uP3z5NQgMMSi4DcMsg=\", false, function () {\n  return [useMountTransition];\n});\n\n_c = Drawer;\nexport default Drawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"sources":["/Users/brittanymorris/Desktop/ipo_rutgers/src/components/Drawer.js"],"names":["useRef","useEffect","createPortal","FocusTrap","cn","useMountTransition","createPortalRoot","drawerRoot","document","createElement","setAttribute","Drawer","isOpen","children","className","onClose","position","removeWhenClosed","bodyRef","querySelector","portalRootRef","getElementById","isTransitioning","current","appendChild","portal","bodyEl","remove","style","overflow","updatePageScroll","onKeyPress","e","key","window","addEventListener","removeEventListener","open","in"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport FocusTrap from \"focus-trap-react\";\nimport cn from \"classnames\";\nimport useMountTransition from \"./useMountTransition\";\n\nfunction createPortalRoot() {\n  const drawerRoot = document.createElement(\"div\");\n  drawerRoot.setAttribute(\"id\", \"drawer-root\");\n\n  return drawerRoot;\n}\n\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-a-drawer-component-with-react-portals\n */\nconst Drawer = ({\n  isOpen,\n  children,\n  className,\n  onClose,\n  position = \"left\",\n  removeWhenClosed = true\n}) => {\n  const bodyRef = useRef(document.querySelector(\"body\"));\n  const portalRootRef = useRef(\n    document.getElementById(\"drawer-root\") || createPortalRoot()\n  );\n  const isTransitioning = useMountTransition(isOpen, 300);\n\n  // Append portal root on mount\n  useEffect(() => {\n    bodyRef.current.appendChild(portalRootRef.current);\n    const portal = portalRootRef.current;\n    const bodyEl = bodyRef.current;\n\n    return () => {\n      // Clean up the portal when drawer component unmounts\n      portal.remove();\n      // Ensure scroll overflow is removed\n      bodyEl.style.overflow = \"\";\n    };\n  }, []);\n\n  // Prevent page scrolling when the drawer is open\n  useEffect(() => {\n    const updatePageScroll = () => {\n      if (isOpen) {\n        bodyRef.current.style.overflow = \"hidden\";\n      } else {\n        bodyRef.current.style.overflow = \"\";\n      }\n    };\n\n    updatePageScroll();\n  }, [isOpen]);\n\n  // Allow Escape key to dismiss the drawer\n  useEffect(() => {\n    const onKeyPress = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener(\"keyup\", onKeyPress);\n    }\n\n    return () => {\n      window.removeEventListener(\"keyup\", onKeyPress);\n    };\n  }, [isOpen, onClose]);\n\n  if (!isTransitioning && removeWhenClosed && !isOpen) {\n    return null;\n  }\n\n  return createPortal(\n    <FocusTrap active={isOpen}>\n      <div\n        aria-hidden={isOpen ? \"false\" : \"true\"}\n        className={cn(\"drawer-container\", {\n          open: isOpen,\n          in: isTransitioning,\n          className\n        })}\n      >\n        <div className={cn(\"drawer\", position)} role=\"dialog\">\n          {children}\n        </div>\n        <div className=\"backdrop\" onClick={onClose} />\n      </div>\n    </FocusTrap>,\n    portalRootRef.current\n  );\n};\n\nexport default Drawer;\n"]},"metadata":{},"sourceType":"module"}