{"ast":null,"code":"var _jsxFileName = \"/Users/brittanymorris/Desktop/ipo_rutgers/src/views/Tab1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar, NavTabs, SearchBar } from \"../components\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport PlantImages from \"../util/PlantImages\";\nimport { Close } from \"@material-ui/icons\";\nimport { AppBar, Toolbar, Typography, makeStyles, CircularProgress, Button, CardActions, Card, CardContent, CardActionArea, List, ListItem, ListItemAvatar, ListItemText, Avatar, Dialog, DialogContent, IconButton } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    backgroundColor: \"#78935d\",\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    fontWeight: 600\n  },\n  paperTitle: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    marginTop: \"9%\",\n    color: \"#78935d\",\n    fontSize: \"3.25vw\",\n    fontWeight: \"semi-bold\"\n  },\n  paperSubTitle: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    marginTop: \"15%\",\n    color: \"#707066\",\n    fontSize: \"1.12vw\"\n  },\n  plantImage: {\n    width: \"100%\"\n  },\n  loading: {\n    marginLeft: \"50%\",\n    marginTop: \"20px\",\n    color: \"#78935d\"\n  },\n  cardImage: {\n    maxWidth: 500,\n    textAlign: \"center\",\n    boxShadow: \"0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05)\",\n    transition: \".3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)\",\n    margin: \"10px\",\n    \"&:hover\": {\n      transform: \"scale(1.03)\",\n      boxShadow: \"0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06)\"\n    }\n  },\n  listIcons: {\n    display: \"flex\"\n  },\n  card: {\n    display: \"inline-block\",\n    margin: \"20px\"\n  },\n  thumbnail: {\n    height: \"350px\",\n    width: \"100%\"\n  },\n  dialogThumbnail: {\n    height: \"80%\",\n    width: \"100%\"\n  },\n  plantCard: {\n    display: \"inline-block\",\n    marginTop: \"20px\"\n  },\n  learnMoreBtn: {\n    color: \"#78935d\",\n    fontWeight: 500\n  },\n  pagination: {\n    margin: \"10px\"\n  },\n  dialogTitle: {\n    display: \"inline-block\",\n    margin: \"20px\"\n  },\n  closeBtn: {\n    float: \"right\",\n    margin: \"10px\"\n  },\n  icons: {\n    color: \"#78935d\"\n  },\n  familyName: {\n    marginTop: \"15px\",\n    color: \"grey\",\n    fontStyle: \"italic\",\n    fontSize: \"16px\"\n  }\n}));\nexport default function Tab1() {\n  _s();\n\n  const classes = useStyles();\n  const [loadingData, setLoadingData] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const itemsPerPage = 9;\n  const [page, setPage] = useState(1);\n  const [myPathInfo, setmyPathInfo] = useState([]);\n  const [myPathApp, setMyPathApp] = useState(null);\n  useEffect(() => {\n    const fetchPlantData = async () => {\n      setLoadingData(true);\n\n      try {\n        const {\n          data\n        } = await axios.get(\"https://data.sfgov.org/resource/vmnk-skih.json?$select=*\");\n        setLoadingData(false);\n        setmyPathInfo(data);\n      } catch (err) {}\n    };\n\n    fetchPlantData();\n  }, []);\n\n  const filterNames = _ref => {\n    let {\n      common_name\n    } = _ref;\n    return common_name && common_name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n  };\n\n  const handleClickOpen = (event, item) => {\n    setOpen(true);\n    setMyPathApp(item);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: setSearchValue,\n        value: searchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), loadingData === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: classes.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [myPathInfo && myPathInfo.filter(filterNames).slice((page - 1) * itemsPerPage, page * itemsPerPage).map(plants => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.plantCard,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.cardImage,\n              children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"plantImage\",\n                  src: PlantImages[plants.common_name] ? PlantImages[plants.common_name].image : \"https://i.imgur.com/VRaN8uw.jpg\",\n                  className: classes.thumbnail\n                }, plants.common_name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h5\",\n                    component: \"h2\",\n                    children: plants.common_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    component: \"p\",\n                    children: [/*#__PURE__*/_jsxDEV(List, {\n                      className: classes.listIcons,\n                      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: \"Type\",\n                          secondary: plants.plant_type\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 35\n                        }, this)]\n                      }, plants.plant_type, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: \"Color\",\n                          secondary: typeof plants.flower_color !== \"undefined\" ? plants.flower_color.replace(/;/g, \", \") : \"Not Available\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 35\n                        }, this)]\n                      }, plants.flower_color, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: \"Water Needs\",\n                          secondary: plants.water_needs\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 35\n                        }, this)]\n                      }, plants.water_needs, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        size: \"small\",\n                        onClick: event => handleClickOpen(event, plants),\n                        className: classes.learnMoreBtn,\n                        children: \"Learn More\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }, this)\n          }, plants.common_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: Math.ceil(myPathInfo.length / itemsPerPage),\n            page: page,\n            onChange: (e, value) => setPage(value),\n            defaultPage: 1,\n            size: \"medium\",\n            showFirstButton: true,\n            showLastButton: true,\n            className: classes.pagination\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), open && myPathApp && /*#__PURE__*/_jsxDEV(Dialog, {\n          onClose: handleClose,\n          \"aria-labelledby\": \"customized-dialog-title\",\n          open: open,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.dialogTitle,\n              variant: \"h6\",\n              children: myPathApp.common_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), handleClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.closeBtn,\n              \"aria-label\": \"close\",\n              onClick: handleClose,\n              children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"plantImage\",\n              src: PlantImages[myPathApp.common_name] ? PlantImages[myPathApp.common_name].image : \"https://i.imgur.com/VRaN8uw.jpg\",\n              className: classes.dialogThumbnail\n            }, myPathApp.common_name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              className: classes.familyName,\n              children: [\"Family Name: \", myPathApp.family_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Type\",\n                    secondary: myPathApp.plant_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this)]\n                }, myPathApp.plant_type, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Flower Color\",\n                    secondary: typeof myPathApp.flower_color !== \"undefined\" ? myPathApp.flower_color.replace(/;/g, \", \") : \"Not Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)]\n                }, myPathApp.flower_color, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Associated Wildlife\",\n                    secondary: typeof myPathApp.associated_wildlife !== \"undefined\" ? myPathApp.associated_wildlife.replace(/;/g, \", \") : \"Not Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this)]\n                }, myPathApp.associated_wildlife, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Bloom Time\",\n                    secondary: typeof myPathApp.boom_time !== \"undefined\" ? myPathApp.boom_time.replace(/;/g, \", \") : \"Not Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this)]\n                }, myPathApp.bloom_time, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, myPathApp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavTabs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tab1, \"NFWHPxUJhhAa49RijA5KHXWk+lw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Tab1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tab1\");","map":{"version":3,"sources":["/Users/brittanymorris/Desktop/ipo_rutgers/src/views/Tab1.js"],"names":["React","useState","useEffect","Navbar","NavTabs","SearchBar","Pagination","axios","PlantImages","Close","AppBar","Toolbar","Typography","makeStyles","CircularProgress","Button","CardActions","Card","CardContent","CardActionArea","List","ListItem","ListItemAvatar","ListItemText","Avatar","Dialog","DialogContent","IconButton","useStyles","theme","root","flexGrow","appBar","backgroundColor","color","title","textAlign","fontWeight","paperTitle","position","width","marginTop","fontSize","paperSubTitle","plantImage","loading","marginLeft","cardImage","maxWidth","boxShadow","transition","margin","transform","listIcons","display","card","thumbnail","height","dialogThumbnail","plantCard","learnMoreBtn","pagination","dialogTitle","closeBtn","float","icons","familyName","fontStyle","Tab1","classes","loadingData","setLoadingData","searchValue","setSearchValue","open","setOpen","itemsPerPage","page","setPage","myPathInfo","setmyPathInfo","myPathApp","setMyPathApp","fetchPlantData","data","get","err","filterNames","common_name","toLowerCase","indexOf","handleClickOpen","event","item","handleClose","filter","slice","map","plants","image","plant_type","flower_color","replace","water_needs","Math","ceil","length","e","value","family_name","associated_wildlife","boom_time","bloom_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar, NavTabs, SearchBar } from \"../components\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport PlantImages from \"../util/PlantImages\";\nimport { Close } from \"@material-ui/icons\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  CircularProgress,\n  Button,\n  CardActions,\n  Card,\n  CardContent,\n  CardActionArea,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Dialog,\n  DialogContent,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#78935d\",\n    color: \"white\",\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    fontWeight: 600,\n  },\n  paperTitle: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    marginTop: \"9%\",\n    color: \"#78935d\",\n    fontSize: \"3.25vw\",\n    fontWeight: \"semi-bold\",\n  },\n  paperSubTitle: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    position: \"absolute\",\n    width: \"100%\",\n    marginTop: \"15%\",\n    color: \"#707066\",\n    fontSize: \"1.12vw\",\n  },\n  plantImage: {\n    width: \"100%\",\n  },\n  loading: {\n    marginLeft: \"50%\",\n    marginTop: \"20px\",\n    color: \"#78935d\",\n  },\n  cardImage: {\n    maxWidth: 500,\n    textAlign: \"center\",\n    boxShadow: \"0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05)\",\n    transition:\n      \".3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)\",\n    margin: \"10px\",\n    \"&:hover\": {\n      transform: \"scale(1.03)\",\n      boxShadow: \"0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06)\",\n    },\n  },\n  listIcons: {\n    display: \"flex\",\n  },\n  card: {\n    display: \"inline-block\",\n    margin: \"20px\",\n  },\n  thumbnail: {\n    height: \"350px\",\n    width: \"100%\",\n  },\n  dialogThumbnail: {\n    height: \"80%\",\n    width: \"100%\",\n  },\n  plantCard: {\n    display: \"inline-block\",\n    marginTop: \"20px\",\n  },\n  learnMoreBtn: {\n    color: \"#78935d\",\n    fontWeight: 500,\n  },\n  pagination: {\n    margin: \"10px\",\n  },\n  dialogTitle: {\n    display: \"inline-block\",\n    margin: \"20px\",\n  },\n  closeBtn: {\n    float: \"right\",\n    margin: \"10px\",\n  },\n  icons: {\n    color: \"#78935d\",\n  },\n  familyName: {\n    marginTop: \"15px\",\n    color: \"grey\",\n    fontStyle: \"italic\",\n    fontSize: \"16px\",\n  },\n}));\n\nexport default function Tab1() {\n  const classes = useStyles();\n  const [loadingData, setLoadingData] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const itemsPerPage = 9;\n  const [page, setPage] = useState(1);\n  const [myPathInfo, setmyPathInfo] = useState([]);\n  const [myPathApp, setMyPathApp] = useState(null);\n\n  useEffect(() => {\n    const fetchPlantData = async () => {\n      setLoadingData(true);\n      try {\n        const { data } = await axios.get(\n          \"https://data.sfgov.org/resource/vmnk-skih.json?$select=*\"\n        );\n        setLoadingData(false);\n        setmyPathInfo(data);\n      } catch (err) {}\n    };\n    fetchPlantData();\n  }, []);\n\n  const filterNames = ({ common_name }) => {\n    return (\n      common_name &&\n      common_name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\n    );\n  };\n\n  const handleClickOpen = (event, item) => {\n    setOpen(true);\n    setMyPathApp(item);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n      <Navbar />\n        <SearchBar onSearch={setSearchValue} value={searchValue} />\n        {loadingData === true ? (\n          <CircularProgress className={classes.loading} />\n        ) : (\n          <>\n            {myPathInfo &&\n              myPathInfo\n                .filter(filterNames)\n                .slice((page - 1) * itemsPerPage, page * itemsPerPage)\n                .map((plants) => {\n                  return (\n                    <span\n                      key={plants.common_name}\n                      className={classes.plantCard}\n                    >\n                      <Card className={classes.cardImage}>\n                        <CardActionArea>\n                          <img\n                            alt=\"plantImage\"\n                            key={plants.common_name}\n                            src={\n                              PlantImages[plants.common_name]\n                                ? PlantImages[plants.common_name].image\n                                : \"https://i.imgur.com/VRaN8uw.jpg\"\n                            }\n                            className={classes.thumbnail}\n                          />\n                          <CardContent>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"h2\"\n                            >\n                              {plants.common_name}\n                            </Typography>\n                            <Typography\n                              variant=\"body2\"\n                              color=\"textSecondary\"\n                              component=\"p\"\n                            >\n                              <List className={classes.listIcons}>\n                                <ListItem key={plants.plant_type}>\n                                  <ListItemAvatar>\n                                    <Avatar></Avatar>\n                                  </ListItemAvatar>\n                                  <ListItemText\n                                    primary=\"Type\"\n                                    secondary={plants.plant_type}\n                                  />\n                                </ListItem>\n                                <ListItem key={plants.flower_color}>\n                                  <ListItemAvatar>\n                                    <Avatar></Avatar>\n                                  </ListItemAvatar>\n                                  <ListItemText\n                                    primary=\"Color\"\n                                    secondary={\n                                      typeof plants.flower_color !== \"undefined\"\n                                        ? plants.flower_color.replace(\n                                            /;/g,\n                                            \", \"\n                                          )\n                                        : \"Not Available\"\n                                    }\n                                  />\n                                </ListItem>\n                                <ListItem key={plants.water_needs}>\n                                  <ListItemAvatar>\n                                    <Avatar></Avatar>\n                                  </ListItemAvatar>\n                                  <ListItemText\n                                    primary=\"Water Needs\"\n                                    secondary={plants.water_needs}\n                                  />\n                                </ListItem>\n                              </List>\n                              <CardActions>\n                                <Button\n                                  size=\"small\"\n                                  onClick={(event) =>\n                                    handleClickOpen(event, plants)\n                                  }\n                                  className={classes.learnMoreBtn}\n                                >\n                                  Learn More\n                                </Button>\n                              </CardActions>\n                            </Typography>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </span>\n                  );\n                })}\n            <div>\n              <Pagination\n                count={Math.ceil(myPathInfo.length / itemsPerPage)}\n                page={page}\n                onChange={(e, value) => setPage(value)}\n                defaultPage={1}\n                size=\"medium\"\n                showFirstButton\n                showLastButton\n                className={classes.pagination}\n              />\n            </div>\n\n            {open && myPathApp && (\n              <Dialog\n                key={myPathApp}\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n              >\n                <div>\n                  <Typography className={classes.dialogTitle} variant=\"h6\">\n                    {myPathApp.common_name}\n                  </Typography>\n                  {handleClose ? (\n                    <IconButton\n                      className={classes.closeBtn}\n                      aria-label=\"close\"\n                      onClick={handleClose}\n                    >\n                      <Close />\n                    </IconButton>\n                  ) : null}\n                </div>\n                <DialogContent dividers>\n                  <img\n                    alt=\"plantImage\"\n                    key={myPathApp.common_name}\n                    src={\n                      PlantImages[myPathApp.common_name]\n                        ? PlantImages[myPathApp.common_name].image\n                        : \"https://i.imgur.com/VRaN8uw.jpg\"\n                    }\n                    className={classes.dialogThumbnail}\n                  />\n                  <Typography gutterBottom className={classes.familyName}>\n                    Family Name: {myPathApp.family_name}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <List>\n                      <ListItem key={myPathApp.plant_type}>\n                        <ListItemAvatar></ListItemAvatar>\n                        <ListItemText\n                          primary=\"Type\"\n                          secondary={myPathApp.plant_type}\n                        />\n                      </ListItem>\n                      <ListItem key={myPathApp.flower_color}>\n                        <ListItemAvatar></ListItemAvatar>\n                        <ListItemText\n                          primary=\"Flower Color\"\n                          secondary={\n                            typeof myPathApp.flower_color !== \"undefined\"\n                              ? myPathApp.flower_color.replace(/;/g, \", \")\n                              : \"Not Available\"\n                          }\n                        />\n                      </ListItem>\n                      <ListItem key={myPathApp.associated_wildlife}>\n                        <ListItemAvatar></ListItemAvatar>\n                        <ListItemText\n                          primary=\"Associated Wildlife\"\n                          secondary={\n                            typeof myPathApp.associated_wildlife !== \"undefined\"\n                              ? myPathApp.associated_wildlife.replace(/;/g, \", \")\n                              : \"Not Available\"\n                          }\n                        />\n                      </ListItem>\n                      <ListItem key={myPathApp.bloom_time}>\n                        <ListItemAvatar></ListItemAvatar>\n                        <ListItemText\n                          primary=\"Bloom Time\"\n                          secondary={\n                            typeof myPathApp.boom_time !== \"undefined\"\n                              ? myPathApp.boom_time.replace(/;/g, \", \")\n                              : \"Not Available\"\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  </Typography>\n                </DialogContent>\n              </Dialog>\n            )}\n          </>\n        )}\n      </div>\n      <NavTabs />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}