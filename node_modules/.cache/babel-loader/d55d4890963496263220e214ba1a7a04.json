{"ast":null,"code":"var _jsxFileName = \"/Users/brittanymorris/Desktop/ipo_rutgers/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RUhorizontal from \"../assets/ipo_horizontal.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#cc0033\",\n    color: \"white\"\n  },\n  RUhorizontal: {\n    width: \"40vw\",\n    padding: \"8px\"\n  }\n}));\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst Navbar = () => {\n  _s();\n\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const classes = useStyles();\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: RUhorizontal,\n          className: classes.RUhorizontal,\n          alt: \"RUhorizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open settings\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleOpenUserMenu,\n              sx: {\n                p: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: \"/static/images/avatar/2.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"zsVTcoS4bebpAVtSTMB1h3PCHcA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/brittanymorris/Desktop/ipo_rutgers/src/components/Navbar.js"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","Container","Avatar","Tooltip","MenuItem","makeStyles","RUhorizontal","useStyles","theme","appBar","position","backgroundColor","color","width","padding","settings","Navbar","anchorElUser","setAnchorElUser","useState","classes","handleOpenUserMenu","event","currentTarget","handleCloseUserMenu","flexGrow","p"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAD+B;AAMvCN,EAAAA,YAAY,EAAE;AACZO,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,OAAO,EAAE;AAFG;AANyB,CAAZ,CAAD,CAA5B;AAYA,MAAMC,QAAQ,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,QAApC,CAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxB,KAAK,CAACyB,QAAN,CAAe,IAAf,CAAxC;AACA,QAAMC,OAAO,GAAGb,SAAS,EAAzB;;AAEA,QAAMc,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,aAAP,CAAf;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,OAAO,CAACX,MAA3B;AAAmC,IAAA,QAAQ,EAAC,QAA5C;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,cAAc,MAAvB;AAAA,gCACI;AACE,UAAA,GAAG,EAAEH,YADP;AAEE,UAAA,SAAS,EAAEc,OAAO,CAACd,YAFrB;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADJ,eAME,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEmB,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,eAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAEJ,kBAArB;AAAyC,cAAA,EAAE,EAAE;AAAEK,gBAAAA,CAAC,EAAE;AAAL,eAA7C;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC,YAAZ;AAAyB,gBAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAtDD;;GAAMV,M;UAEYT,S;;;KAFZS,M;AAuDN,eAAeA,MAAf","sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RUhorizontal from \"../assets/ipo_horizontal.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#cc0033\",\n    color: \"white\",\n  },\n  RUhorizontal: {\n    width: \"40vw\",\n    padding: \"8px\",\n  },\n}));\n\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst Navbar = () => {\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const classes = useStyles();\n\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n            <img\n              src={RUhorizontal}\n              className={classes.RUhorizontal}\n              alt=\"RUhorizontal\"\n            />\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            {/* <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu> */}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}